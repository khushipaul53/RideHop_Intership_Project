// Generated by view binder compiler. Do not edit!
package com.example.ridehop_intership_project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ridehop_intership_project.R;
import com.google.android.material.navigation.NavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NavigationLayoutBinding implements ViewBinding {
  @NonNull
  private final NavigationView rootView;

  @NonNull
  public final LinearLayout llHome;

  @NonNull
  public final LinearLayout llLogout;

  @NonNull
  public final LinearLayout llMyRides;

  @NonNull
  public final LinearLayout llProfile;

  @NonNull
  public final LinearLayout llPromocode;

  @NonNull
  public final LinearLayout llRewards;

  @NonNull
  public final LinearLayout llSettings;

  @NonNull
  public final LinearLayout nvView;

  private NavigationLayoutBinding(@NonNull NavigationView rootView, @NonNull LinearLayout llHome,
      @NonNull LinearLayout llLogout, @NonNull LinearLayout llMyRides,
      @NonNull LinearLayout llProfile, @NonNull LinearLayout llPromocode,
      @NonNull LinearLayout llRewards, @NonNull LinearLayout llSettings,
      @NonNull LinearLayout nvView) {
    this.rootView = rootView;
    this.llHome = llHome;
    this.llLogout = llLogout;
    this.llMyRides = llMyRides;
    this.llProfile = llProfile;
    this.llPromocode = llPromocode;
    this.llRewards = llRewards;
    this.llSettings = llSettings;
    this.nvView = nvView;
  }

  @Override
  @NonNull
  public NavigationView getRoot() {
    return rootView;
  }

  @NonNull
  public static NavigationLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NavigationLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.navigation_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NavigationLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ll_home;
      LinearLayout llHome = ViewBindings.findChildViewById(rootView, id);
      if (llHome == null) {
        break missingId;
      }

      id = R.id.ll_logout;
      LinearLayout llLogout = ViewBindings.findChildViewById(rootView, id);
      if (llLogout == null) {
        break missingId;
      }

      id = R.id.ll_my_rides;
      LinearLayout llMyRides = ViewBindings.findChildViewById(rootView, id);
      if (llMyRides == null) {
        break missingId;
      }

      id = R.id.ll_profile;
      LinearLayout llProfile = ViewBindings.findChildViewById(rootView, id);
      if (llProfile == null) {
        break missingId;
      }

      id = R.id.ll_promocode;
      LinearLayout llPromocode = ViewBindings.findChildViewById(rootView, id);
      if (llPromocode == null) {
        break missingId;
      }

      id = R.id.ll_rewards;
      LinearLayout llRewards = ViewBindings.findChildViewById(rootView, id);
      if (llRewards == null) {
        break missingId;
      }

      id = R.id.ll_Settings;
      LinearLayout llSettings = ViewBindings.findChildViewById(rootView, id);
      if (llSettings == null) {
        break missingId;
      }

      id = R.id.nvView;
      LinearLayout nvView = ViewBindings.findChildViewById(rootView, id);
      if (nvView == null) {
        break missingId;
      }

      return new NavigationLayoutBinding((NavigationView) rootView, llHome, llLogout, llMyRides,
          llProfile, llPromocode, llRewards, llSettings, nvView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
